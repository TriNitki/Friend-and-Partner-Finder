import telebot
import sqlite3
import os
import json
from dotenv import load_dotenv

load_dotenv()

#bot
bot_token = os.getenv("bot_token")
bot = telebot.TeleBot(bot_token)

import models
from func import delete_user, check_city, year_type

'''========BOT==COMMANDS========'''
"New user greet"
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.chat.username}üëã!\
                    \n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ "DetectlyBot"! –≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ –¥—Ä—É–∑–µ–π –∏ –±–∏–∑–Ω–µ—Å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤.')
    bot.send_message(message.chat.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /reg. –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –≤–≤–µ–¥–∏—Ç–µ /help.')

"Send full list of available commands"
@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id,    '–°–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥:')
    bot.send_message(message.chat.id,    '/start - –º–µ–Ω—é –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è\
                                        \n/help - –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥\
                                        \n/reg - –Ω–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é\
                                        \n/delete - —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\
                                        \n/me - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\
                                        ')

"Commands that require db access"
@bot.message_handler(commands=['reg', 'delete', 'me', 'edit'])
def db_req_com(message):
    global connect, cursor, user
    connect = sqlite3.connect('users.sqlite3', check_same_thread=False)
    cursor = connect.cursor()
    user = models.User(message.chat.id) # Define user

    # Create new db if it isn't exist
    cursor.execute("""CREATE TABLE IF NOT EXISTS login_id(
        id          INTEGER,
        first_name  STRING,
        second_name STRING,
        age         INTEGER,
        sex         STRING,
        city        STRING,
        region      STRING,
        interests   STRING
    )""")
    connect.commit()

    cursor.execute(f"SELECT id FROM login_id WHERE id = {message.chat.id}")
    data = cursor.fetchone()

    if data != None:
        cursor.execute(f"SELECT id, first_name, second_name, age, sex, city, region, interests FROM login_id WHERE id = {message.chat.id}")
        id, f_name, s_name, age, sex, city, region, interests = cursor.fetchone()
        user = models.User(id, f_name, s_name, age, sex, city, region, interests)

    if message.text == "/reg":
        #register user if it isn't exist
        if data == None:
            reg_user(message)
        else:
            bot.send_message(message.chat.id, '–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.')
    elif message.text == "/delete":
        #delete user if it is exist
        if data == None:
            bot.send_message(message.chat.id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω.\n–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /reg.')
        else:
            delete_user(message.chat.id)
            bot.send_message(message.chat.id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª —É–¥–∞–ª–µ–Ω.\n–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /reg.')
    elif message.text == "/me":
        #greet user if it is exist
        if data == None:
            bot.send_message(message.chat.id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω.\n–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /reg')
        else:
            greet_user(message)
    elif message.text == "/edit":
        if data == None:
            bot.send_message(message.chat.id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω.\n–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /reg')
        else:
            bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å:')
            bot.send_message(message.chat.id, '–ò - –ò–º—è\n–§ - –§–∞–º–∏–ª–∏—è\n–í - –í–æ–∑—Ä–∞—Å—Ç\n–ü - –ü–æ–ª\n–ì - –ì–æ—Ä–æ–¥\n–ò - –ò–Ω—Ç–µ—Ä–µ—Å—ã\n–í—Å–µ - –ò–∑–º–µ–Ω–∏—Ç—å –≤—Å–µ\n–ù - –Ω–∏—á–µ–≥–æ, —è –ø–µ—Ä–µ–¥—É–º–∞–ª')
            bot.register_next_step_handler(message, edit_profile)

"Default bot reply"
@bot.message_handler(content_types=['text'])
def non_com(message):
    bot.reply_to(message, 'ü§®')
    bot.send_message(message.chat.id, '–ù–µ –ø–æ–Ω—è–ª.\n–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start.')
'''=============================='''


'''=========Registration========='''
def greet_user(message):
    cursor.execute(f"SELECT id, first_name, second_name, age, sex, city, region, interests FROM login_id WHERE id = {message.chat.id}")
    id, f_name, s_name, age, sex, city, region, interests = cursor.fetchone()
    user = models.User(id, f_name, s_name, age, sex, city, region, interests)
    real_sex = {"m": "–º—É–∂—Å–∫–æ–π", "w": "–∂–µ–Ω—Å–∫–∏–π", "undef": "—Å–µ–∫—Ä–µ—Ç–Ω—ã–π"}[user.sex]

    'Greet'
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {user.second_name} {user.first_name}. –¢–µ–±–µ {user.age} {year_type(user.age)}.')
    if user.city != 'undef':
        bot.send_message(message.chat.id, f'–¢–≤–æ–π –ø–æ–ª - {real_sex}. –¢—ã –∂–∏–≤–µ—à—å –≤ –≥–æ—Ä–æ–¥–µ {user.city}, {user.region}')
    else:
        bot.send_message(message.chat.id, f'–¢–≤–æ–π –ø–æ–ª - {real_sex}.')
    bot.send_message(message.chat.id, f'–¢–≤–æ–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã: {", ".join(json.loads(user.interests))}.')

def reg_user(message):
    bot.send_message(message.chat.id, "–ö–∞–∫–æ–µ —É —Ç–µ–±—è –±—É–¥–µ—Ç –∏–º—è?")
    bot.register_next_step_handler(message, get_first_name)

def get_first_name(message):
    user.first_name = message.text
    bot.send_message(message.chat.id, '–ö–∞–∫–∞—è —É —Ç–µ–±—è –±—É–¥–µ—Ç —Ñ–∞–º–∏–ª–∏—è?')
    bot.register_next_step_handler(message, get_second_name) 

def get_second_name(message):
    user.second_name = message.text
    bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?')
    bot.register_next_step_handler(message, get_age)
    
def get_age(message):
    if user.age == None:
        try:
            user.age = int(message.text)
        except:
            bot.reply_to(message, '–ú–æ–∂–µ—Ç –ª—É—á—à–µ —Ü–∏—Ñ—Ä–∞–º–∏ –≤–≤–µ–¥–µ—à—å?')
            bot.register_next_step_handler(message, get_age)
            return
    bot.send_message(message.chat.id, '–ö–∞–∫–æ–≥–æ —Ç—ã –ø–æ–ª–∞?')
    bot.register_next_step_handler(message, get_sex)

def get_sex(message):
    if message.text.lower() in ['–º', '–º—É–∂—Å–∫–æ–π', '–º—É–∂', '–º—É–∂–∏–∫', 'm', 'man']:
        user.sex = 'm'
    elif message.text.lower() in ['–∂', '–∂–µ–Ω—Å–∫–∏–π', '–∂–µ–Ω', '–¥–µ–≤—É—à–∫–∞', '–∂–µ–Ω—â–∏–Ω–∞', 'w', 'woman']:
        user.sex = 'w'
    elif message.text.lower() in ['–ø', '–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å', '–ø—Ä–∞–ø—É—Å—Ç–∏—Ç—å', '–Ω–µ', '–Ω–µ—Ç', 'u', 'undef', 'undefined']:
        user.sex = 'undef'
    else:
        bot.reply_to(message, '–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç–∞–∫–æ–≥–æ –ø–æ–ª–∞ —è –Ω–µ –∑–Ω–∞—é. –í–æ—Ç –∫–∞–∫–∏–µ —è –∑–Ω–∞—é:')
        bot.send_message(message.chat.id, '–ú - –º—É–∂—Å–∫–æ–π\
                         \n–ñ - –∂–µ–Ω—Å–∫–∏–π\
                         \n–ü - –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å')
        bot.register_next_step_handler(message, get_sex)
        return

    bot.send_message(message.chat.id, '–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ —Ç—ã –∂–∏–≤–µ—à—å?')
    bot.register_next_step_handler(message, get_city)

def get_city(message):
    new_city = check_city(message.text.title())
    if new_city:
        user.city = new_city["city"]
        user.region = new_city["region"]
    elif message.text.lower() == '–ø':
        user.city = 'undef'
        user.region = 'undef'
    else:
        bot.reply_to(message, '–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ —è –Ω–µ –∑–Ω–∞—é.\n–ü–æ–ø—Ä–æ–±—É–π –≤–≤–µ—Å—Ç–∏ –µ–≥–æ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ "–ü" –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ –≤–æ–ø—Ä–æ—Å–∞.')
        bot.register_next_step_handler(message, get_city)
        return

    bot.send_message(message.chat.id, '–ü–µ—Ä–µ—á–∏—Å–ª–∏ —Å–≤–æ–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é.')
    bot.register_next_step_handler(message, get_interests)

def get_interests(message):
    interests = [item.strip() for item in message.text.lower().split(',')]
    user.interests = json.dumps(interests, indent=4, ensure_ascii=False)
    cursor.execute("INSERT INTO login_id VALUES(?, ?, ?, ?, ?, ?, ?, ?);", user.get_data())
    connect.commit()
    greet_user(message)
'''=============================='''


'''=============Edit============='''
def edit_profile(message):
    cursor.execute(f"SELECT id, first_name, second_name, age, sex, city, region, interests FROM login_id WHERE id = {message.chat.id}")
    id, f_name, s_name, age, sex, city, region, interests = cursor.fetchone()
    user = models.User(id, f_name, s_name, age, sex, city, region, interests)

    if message.text.lower() in ["–∏", "–∏–º—è", "—Ñ", "—Ñ–∞–º–∏–ª–∏—è", "–≤", "–≤–æ–∑—Ä–∞—Å—Ç", "–ø", "–ø–æ–ª", "–≥", "–≥–æ—Ä–æ–¥", "–∏", "–∏–Ω—Ç–µ—Ä–µ—Å—ã", "–≤—Å–µ", "–≤—Å—ë", "–Ω", "–Ω–∏—á–µ–≥–æ"]:
        if message.text.lower() in ["–∏", "–∏–º—è"]:
            user.first_name = None
            bot.send_message(message.chat.id, "–ö–∞–∫–æ–µ —É —Ç–µ–±—è –±—É–¥–µ—Ç –∏–º—è?")
            bot.register_next_step_handler(message, edit_first_name)
        elif message.text.lower() in ["—Ñ", "—Ñ–∞–º–∏–ª–∏—è"]:
            user.second_name = None
            bot.send_message(message.chat.id, '–ö–∞–∫–∞—è —É —Ç–µ–±—è –±—É–¥–µ—Ç —Ñ–∞–º–∏–ª–∏—è?')
            bot.register_next_step_handler(message, edit_second_name)
        elif message.text.lower() in ["–≤", "–≤–æ–∑—Ä–∞—Å—Ç"]:
            user.age = None
            bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?')
            bot.register_next_step_handler(message, edit_age)
        elif message.text.lower() in ["–ø", "–ø–æ–ª"]:
            user.sex = None
            bot.send_message(message.chat.id, '–ö–∞–∫–æ–≥–æ —Ç—ã –ø–æ–ª–∞?')
            bot.register_next_step_handler(message, edit_sex)
        elif message.text.lower() in ["–≥", "–≥–æ—Ä–æ–¥"]:
            user.city = None
            user.region = None
            bot.send_message(message.chat.id, '–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ —Ç—ã –∂–∏–≤–µ—à—å?')
            bot.register_next_step_handler(message, edit_city)
        elif message.text.lower() in ["–∏", "–∏–Ω—Ç–µ—Ä–µ—Å—ã"]:
            user.interests = None
            bot.register_next_step_handler(message, edit_interests)
        elif message.text.lower() in ["–≤—Å–µ", "–≤—Å—ë"]:
            user = models.User(message.chat.id)
            bot.register_next_step_handler(message, reg_user)
        elif message.text.lower() in ["–Ω", "–Ω–∏—á–µ–≥–æ"]:
            greet_user(message)
            return
    else:
        bot.reply_to(message, "–¢–∞–∫–æ–≥–æ —è –Ω–µ –∑–Ω–∞—é.")
        bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å.')
        bot.send_message(message.chat.id, '–ò - –ò–º—è\n–§ - –§–∞–º–∏–ª–∏—è\n–í - –í–æ–∑—Ä–∞—Å—Ç\n–ü - –ü–æ–ª\n–ì - –ì–æ—Ä–æ–¥\n–ò - –ò–Ω—Ç–µ—Ä–µ—Å—ã\n–í—Å–µ - –ò–∑–º–µ–Ω–∏—Ç—å –≤—Å–µ\n–ù - –Ω–∏—á–µ–≥–æ, —è –ø–µ—Ä–µ–¥—É–º–∞–ª')

def edit_first_name(message):
    user.first_name = message.text
    delete_user(message.chat.id)
    cursor.execute("INSERT INTO login_id VALUES(?, ?, ?, ?, ?, ?, ?, ?);", user.get_data())
    connect.commit()
    bot.reply_to(message, '–ü–æ–Ω—è–ª!')
    back_to_edit(message)

def edit_second_name(message):
    user.second_name = message.text
    delete_user(message.chat.id)
    cursor.execute("INSERT INTO login_id VALUES(?, ?, ?, ?, ?, ?, ?, ?);", user.get_data())
    connect.commit()
    bot.reply_to(message, '–ü–æ–Ω—è–ª!')
    back_to_edit(message)

def edit_age(message):
    if user.age == None:
        try:
            user.age = int(message.text)
        except:
            bot.reply_to(message, '–ú–æ–∂–µ—Ç –ª—É—á—à–µ —Ü–∏—Ñ—Ä–∞–º–∏ –≤–≤–µ–¥–µ—à—å?')
            bot.register_next_step_handler(message, edit_age)
            return
    delete_user(message.chat.id)
    cursor.execute("INSERT INTO login_id VALUES(?, ?, ?, ?, ?, ?, ?, ?);", user.get_data())
    connect.commit()
    bot.reply_to(message, '–ü–æ–Ω—è–ª!')
    back_to_edit(message)

def edit_sex(message):
    if message.text.lower() in ['–º', '–º—É–∂—Å–∫–æ–π', '–º—É–∂', '–º—É–∂–∏–∫', 'm', 'man']:
        user.sex = 'm'
    elif message.text.lower() in ['–∂', '–∂–µ–Ω—Å–∫–∏–π', '–∂–µ–Ω', '–¥–µ–≤—É—à–∫–∞', '–∂–µ–Ω—â–∏–Ω–∞', 'w', 'woman']:
        user.sex = 'w'
    elif message.text.lower() in ['–ø', '–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å', '–ø—Ä–∞–ø—É—Å—Ç–∏—Ç—å', '–Ω–µ', '–Ω–µ—Ç', 'u', 'undef', 'undefined']:
        user.sex = 'undef'
    else:
        bot.reply_to(message, '–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç–∞–∫–æ–≥–æ –ø–æ–ª–∞ —è –Ω–µ –∑–Ω–∞—é. –í–æ—Ç –∫–∞–∫–∏–µ —è –∑–Ω–∞—é:')
        bot.send_message(message.chat.id, '–ú - –º—É–∂—Å–∫–æ–π\
                         \n–ñ - –∂–µ–Ω—Å–∫–∏–π\
                         \n–ü - –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å')
        bot.register_next_step_handler(message, edit_sex)
        return
    delete_user(message.chat.id)
    cursor.execute("INSERT INTO login_id VALUES(?, ?, ?, ?, ?, ?, ?, ?);", user.get_data())
    connect.commit()
    bot.reply_to(message, '–ü–æ–Ω—è–ª!')
    back_to_edit(message)

def edit_city(message):
    new_city = check_city(message.text.title())
    if new_city:
        user.city = new_city["city"]
        user.region = new_city["region"]
    elif message.text.lower() == '–ø':
        user.city = 'undef'
        user.region = 'undef'
    else:
        bot.reply_to(message, '–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ —è –Ω–µ –∑–Ω–∞—é.\n–ü–æ–ø—Ä–æ–±—É–π –≤–≤–µ—Å—Ç–∏ –µ–≥–æ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ "–ü" –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ –≤–æ–ø—Ä–æ—Å–∞.')
        bot.register_next_step_handler(message, get_city)
        return
    delete_user(message.chat.id)
    cursor.execute("INSERT INTO login_id VALUES(?, ?, ?, ?, ?, ?, ?, ?);", user.get_data())
    connect.commit()
    bot.reply_to(message, '–ü–æ–Ω—è–ª!')
    back_to_edit(message)

def edit_interests(message):
    interests = [item.strip() for item in message.text.lower().split(',')]
    user.interests = json.dumps(interests, indent=4, ensure_ascii=False)
    delete_user(message.chat.id)
    cursor.execute("INSERT INTO login_id VALUES(?, ?, ?, ?, ?, ?, ?, ?);", user.get_data())
    connect.commit()
    bot.reply_to(message, '–ü–æ–Ω—è–ª!')
    back_to_edit(message)

def back_to_edit(message):
    bot.send_message(message.chat.id, '–•–æ—Ç–∏—Ç–µ –µ—â–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å?')
    bot.send_message(message.chat.id, '–ò - –ò–º—è\n–§ - –§–∞–º–∏–ª–∏—è\n–í - –í–æ–∑—Ä–∞—Å—Ç\n–ü - –ü–æ–ª\n–ì - –ì–æ—Ä–æ–¥\n–ò - –ò–Ω—Ç–µ—Ä–µ—Å—ã\n–í—Å–µ - –ò–∑–º–µ–Ω–∏—Ç—å –≤—Å–µ\n–ù - –Ω–∏—á–µ–≥–æ, —è –ø–µ—Ä–µ–¥—É–º–∞–ª')
    bot.register_next_step_handler(message, edit_profile)
'''=============================='''

bot.polling()